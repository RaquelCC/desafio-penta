{"version":3,"sources":["provider/firebase.js","components/Invoice.js","components/TotalDisplay.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Invoice","react_default","a","createElement","style","Object","objectSpread","styles","generalContainer","backgroundColor","this","props","index","statColumn","width","statColumnInfo","invoice","folio","tipo","enteReceptor","razonSocial","fecha","hora","montoTotal","toLocaleString","ivaTotal","React","Component","display","flexDirection","margin","paddingTop","paddingBottom","fontFamily","statColumnTitle","fontWeight","textAlign","TotalDisplay","statContainer","statItem","marginRight","marginTop","padding","color","float","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","invoices","_this2","ref","once","snap","newInvoices","values","val","sort","b","fechaEmision","reduce","acc","current","setState","map","item","i","Invoice_Invoice","key","header","tableHeader","tableTitle","renderInvoices","TotalDisplay_TotalDisplay","height","lineHeight","font","fontSize","marginBottom","border","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.613b9ddf.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCrpfosT0uYM8KpekZO4BHvsAKkiI4r1V0\",\r\n    authDomain: \"desafio-penta.firebaseapp.com\",\r\n    databaseURL: \"https://desafio-penta.firebaseio.com\",\r\n    projectId: \"desafio-penta\",\r\n    storageBucket: \"desafio-penta.appspot.com\",\r\n    messagingSenderId: \"392662875414\",\r\n    appId: \"1:392662875414:web:59dbc9c230f019fb\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database();\r\n\r\n","import React from 'react';\r\n\r\nexport default class Invoice extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props)\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n        <div style={{...styles.generalContainer, backgroundColor: (this.props.index%2 === 0) ? \"white\": \"#f6f6f6\"}}>\r\n            <div style={{...styles.statColumn, width: \"10%\"}}>\r\n                {/* <div style={styles.statColumnTitle}>Folio</div> */}\r\n                <div style={styles.statColumnInfo}>{this.props.invoice.folio}</div>\r\n            </div>\r\n            <div style={{...styles.statColumn, width: \"10%\"}}>\r\n                {/* <div style={styles.statColumnTitle}>Tipo de Documento</div> */}\r\n                <div style={styles.statColumnInfo}>{this.props.invoice.tipo}</div>\r\n            </div>\r\n            <div style={{...styles.statColumn, width: \"30%\"}}>\r\n                {/* <div style={styles.statColumnTitle}>Empresa Receptora</div> */}\r\n                <div style={styles.statColumnInfo}>{this.props.invoice.enteReceptor.razonSocial}</div>\r\n            </div>\r\n            <div style={{...styles.statColumn, width: \"30%\"}}>\r\n                {/* <div style={styles.statColumnTitle}>Fecha</div> */}\r\n                <div style={styles.statColumnInfo}>{this.props.invoice.fecha} ,   {this.props.invoice.hora} horas.</div>\r\n            </div>\r\n            <div style={{...styles.statColumn, width: \"10%\"}}>\r\n                {/* <div style={styles.statColumnTitle}>Monto</div> */}\r\n                <div style={styles.statColumnInfo}>{this.props.invoice.montoTotal.toLocaleString()}</div>\r\n            </div>\r\n            <div style={{...styles.statColumn, width: \"10%\"}}>\r\n                {/* <div style={styles.statColumnTitle}>Iva</div> */}\r\n                <div style={styles.statColumnInfo}>{this.props.invoice.ivaTotal.toLocaleString()}</div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    generalContainer: {\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: \"auto\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\",\r\n        fontFamily: \"Ubuntu\"\r\n    },\r\n    statColumn: {\r\n        display: \"flex\",\r\n        margin: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n    statColumnTitle: {\r\n        fontWeight: 500,\r\n        paddingBottom: \"10px\"\r\n    },\r\n    statColumnInfo: {\r\n        textAlign: \"center\"\r\n    }\r\n\r\n \r\n}","import React from 'react';\r\n\r\nexport default class TotalDisplay extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.props.montoTotal > 0 && <div style={styles.generalContainer}>\r\n                <div style={styles.statContainer}>\r\n                    <div>Total Montos:</div>\r\n                    <div style={styles.statItem}>{this.props.montoTotal.toLocaleString()}</div>\r\n                </div>\r\n                <div style={styles.statContainer}>\r\n                    <div>Total Iva:</div>\r\n                    <div style={styles.statItem}>{this.props.ivaTotal.toLocaleString()}</div>\r\n                </div>\r\n            </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    generalContainer: {\r\n        display: \"flex\",\r\n        margin: \"auto\",\r\n        marginRight: \"10%\",\r\n        marginTop: \"50px\",\r\n        width: \"fit-content\",\r\n        flexDirection: \"row\",\r\n        padding: \"10px 20px\",\r\n        backgroundColor: \"#f04e45\",\r\n        color: \"#fff\",\r\n        fontWeight: 500,\r\n    },\r\n    statContainer: {\r\n        padding: \"5px 20px\",\r\n        margin: \"auto\"\r\n    },\r\n    statItem: {\r\n        float: \"right\",\r\n        fontWeight: 400\r\n    }\r\n}","import React from 'react';\nimport { database } from './provider/firebase';\nimport './App.css';\nimport Invoice from './components/Invoice';\nimport TotalDisplay from './components/TotalDisplay';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invoices: [],\n      montoTotal: 0,\n      ivaTotal: 0,\n    }\n\n  }\n\n  componentDidMount() {\n    database.ref().once(\"value\", snap => {\n      const newInvoices = Object.values(snap.val());\n      newInvoices.sort((a,b) => {\n        return (b.fechaEmision-a.fechaEmision)\n      })\n\n      const montoTotal = newInvoices.reduce((acc, current) => {\n        return acc+current.montoTotal;\n      }, 0);\n\n      const ivaTotal = newInvoices.reduce((acc, current) => {\n        return acc+current.ivaTotal;\n      }, 0)\n      this.setState({\n        ...this.state,\n        invoices: newInvoices,\n        montoTotal: montoTotal,\n        ivaTotal: ivaTotal\n      });\n    });\n  }\n\n  \n  renderInvoices() {\n    const invoices = this.state.invoices.map((item, i) => {\n      return <Invoice invoice={item} index={i} key={i}/>\n    });\n    return invoices;\n  }\n\n  render() {\n    return (\n      <div style={styles.generalContainer}>\n        <div style={styles.header}>Información de Documentos Tributarios</div>\n        <div style={styles.tableHeader}>\n          <div style={{...styles.tableTitle, width: \"10%\"}}>Folio</div>\n          <div style={{...styles.tableTitle, width: \"10%\"}}>Tipo</div>\n          <div style={{...styles.tableTitle, width: \"30%\"}}>Empresa Receptora</div>\n          <div style={{...styles.tableTitle, width: \"30%\"}}>Fecha (dd-mm-aaaa, hh:mm)</div>\n          <div style={{...styles.tableTitle, width: \"10%\"}}>Monto</div>\n          <div style={{...styles.tableTitle, width: \"10%\"}}>Iva</div>\n        </div>\n        {this.renderInvoices()}\n        <TotalDisplay montoTotal={this.state.montoTotal} ivaTotal={this.state.ivaTotal}/>\n      </div>\n    )\n  }\n\n  \n}\n\nconst styles = {\n  generalContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: \"50px\"\n  },\n  header: {\n    height: \"80px\",\n    width: \"100%\",\n    marginTop: 0,\n    textAlign: \"center\",\n    lineHeight: \"80px\",\n    backgroundColor: \"#45555f\",\n    color: \"#fff\",\n    font: \"Ubuntu\",\n    fontSize: \"30px\",\n    marginBottom: \"50px\"\n  },\n  tableHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"30px\",\n    width: \"80%\",\n    lineHeight: \"30px\",\n    margin: \"auto\",\n    marginBottom: 0,\n    backgroundColor: \"#f04e45\",\n    color: \"#fff\",\n    textAlign: \"center\"\n\n  },\n  tableTitle: {\n    border: \"#fff 0.3px solid\"\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}